# suppress inspection "UnusedProperty" for whole file
########################################################
### common setting
########################################################
# common
spring.profile.active=prod
spring.mvc.favicon.enabled=false

# logging
logging.level.org.springframework=WARN
logging.level.org.hibernate=WARN
logging.level.com.tianma=DEBUG
logging.file=spring-mvc.log

########################################################
### database(mysql) setting
########################################################
# first db
db.url=jdbc:mysql://120.25.88.24:3306/linkcloud?prepStmtCacheSize=517&cachePrepStmts=true&autoReconnect=true&characterEncoding=utf-8
db.username=root
db.password=egoonetsql3466
db.maxActive=500

# second db
db.second.url=jdbc:mysql://120.25.88.24:3306/freelink_config?prepStmtCacheSize=517&cachePrepStmts=true&autoReconnect=true&characterEncoding=utf-8
db.second.username=root
db.second.password=egoonetsql3466
db.second.maxActive=500

# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true

########################################################
### web setting
########################################################
# spring mvc
spring.mvc.static-path-pattern=/public/**

# velocity
spring.velocity.suffix=.vm
spring.velocity.templateEncoding=UTF-8
spring.velocity.expose-spring-macro-helpers=true
spring.velocity.properties.*=classpath:velocity.properties
spring.velocity.toolbox-config-location=classpath:toolbox.xml
spring.velocity.expose-spring-attributes=true
spring.velocity.expose-session-attributes=true
spring.velocity.resource-loader-path=classpath:/templates/

# server
# server.port=0 随机端口
server.port=8999
server.tomcat.url-encoding=UTF-8
# https
#server.ssl.key-store=classpath:.keystore
#server.ssl.key-store-password=123456
#server.ssl.key-store-type=JKS
#server.ssl.key-alias=tomcat

# upload file
multipart.max-file-size=500Mb
multipart.max-request-size=500Mb

########################################################
### mail setting
########################################################
# 设置邮箱主机
spring.mail.host=smtp.qq.com
# 设置用户名
spring.mail.username=12345678@qq.com
# 设置密码
spring.mail.password=123456
# 设置是否需要认证，如果为true,那么用户名和密码就必须的，
# 如果设置false，可以不设置用户名和密码，当然也得看你的对接的平台是否支持无密码进行访问的。
spring.mail.properties.mail.smtp.auth=true
# STARTTLS[1]  是对纯文本通信协议的扩展。它提供一种方式将纯文本连接升级为加密连接（TLS或SSL），而不是另外使用一个端口作加密通信。
spring.mail.properties.mail.smtp.starttls.enable=true

